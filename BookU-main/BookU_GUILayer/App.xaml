<Application x:Class="BookU_GUILayer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BookU_GUILayer"
             xmlns:views="clr-namespace:BookU_GUILayer.View.Views"
             xmlns:vmfv="clr-namespace:BookU_GUILayer.ViewModels.ForViews"
             xmlns:vmfuc="clr-namespace:BookU_GUILayer.ViewModels.ForUserControls"
             xmlns:uc="clr-namespace:BookU_GUILayer.View.UserControls"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <!--#region Static resources-->
        <FontFamily x:Key="Main.FontFamily">Helvetica</FontFamily>
        <SolidColorBrush x:Key="Foreground" Color="#e4e6eb"/>
        <SolidColorBrush x:Key="Button.Figure.Foreground" Color="#FF9A9B9C"/>
        <SolidColorBrush x:Key="Main.Background" Color="#18191a"/>
        <SolidColorBrush x:Key="Warning.Red" Color="#ff0f0f"/>
        <SolidColorBrush x:Key="Good.Green" Color="Green"/>
        <SolidColorBrush x:Key="Main.Content.Background" Color="#242526"/>
        <!--#endregion-->
        
        <!--#region Button Styles-->
        
        <!--#region Exit Button Style-->
        <Style x:Key="Exit_btnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Button.Figure.Foreground}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="30"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="{StaticResource Warning.Red}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Foreground" Value="{StaticResource Warning.Red}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Home Button Style-->
        <Style x:Key="Home_btnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Button.Figure.Foreground}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Main.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Main.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="border" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        
        <!--#region Basic Button Style-->
        <Style x:Key="Buttonstyle" TargetType="{x:Type Button}">
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform x:Name="MyAnimatedScaleTransform" ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="{StaticResource Main.Content.Background}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
            <Setter Property="FontFamily" Value="{StaticResource Main.FontFamily}"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true">
                            <Border.RenderTransform>
                                <ScaleTransform ScaleX="1.0" ScaleY="1.0"></ScaleTransform>
                            </Border.RenderTransform>
                            
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              LayoutTransform="{Binding ElementName=MyAnimatedScaleTransform}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="MaxHeight" Value="30"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetProperty="RenderTransform.ScaleX" TargetName="border">
                                            <DoubleAnimation To="1.1" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                    <BeginStoryboard>
                                        <Storyboard TargetProperty="RenderTransform.ScaleY" TargetName="border">
                                            <DoubleAnimation To="1.1" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard TargetProperty="RenderTransform.ScaleX" TargetName="border">
                                            <DoubleAnimation To="1" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                    <BeginStoryboard>
                                        <Storyboard TargetProperty="RenderTransform.ScaleY" TargetName="border">
                                            <DoubleAnimation To="1" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#66242526"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="#66242526"/>
                                <Setter Property="TextElement.Foreground" TargetName="border" Value="#66E4E6EB"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Profile Button Style-->
        <Style x:Key="Profile_btnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="true"
                                CornerRadius="90"
                                Background="#19E4E6EB">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#endregion-->
        
        <!--Views-->
        <DataTemplate DataType="{x:Type vmfv:HomePostViewModel}">
            <views:HomeView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vmfv:LogInViewModel}">
            <views:LogInView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vmfv:ProfileViewModel}">
            <views:ProfileView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vmfv:SignUpViewModel}">
            <views:SignUpView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vmfv:MakePostViewModel}">
            <views:MakePostView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vmfv:SearchViewModel}">
            <views:SearchView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vmfv:UserListViewModel}">
            <views:UserListView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vmfv:NotificationListViewModel}">
            <views:NotificationListView/>
        </DataTemplate>
        
        <!--User Controls-->
        <DataTemplate DataType="{x:Type vmfuc:CommentViewModel}">
            <uc:CommentUserControl/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vmfuc:UserViewModel}">
            <uc:UserUserControl/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vmfuc:NotificationViewModel}">
            <uc:NotificationUserControl/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vmfuc:FriendViewModel}">
            <uc:FriendsUserControls/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vmfuc:PostViewModel}">
            <uc:PostUserControl/>
        </DataTemplate>
    </Application.Resources>
</Application>
