<UserControl x:Class="BookU_GUILayer.View.UserControls.UserUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BookU_GUILayer.View.UserControls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:DesignHeight="150" d:DesignWidth="680">
    <UserControl.Resources>
        
        <!--#region Person Add Button Style-->
        <Style x:Key="PersonAdd_btnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Button.Figure.Foreground}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="Green"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Foreground" Value="Green"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Person Remove Button Style-->
        <Style x:Key="PersonRemove_btnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Button.Figure.Foreground}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="{StaticResource Warning.Red}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Foreground" Value="{StaticResource Warning.Red}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

    </UserControl.Resources>

    <Grid Background="{StaticResource Main.Content.Background}" Margin="0,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Grid.Row="0">
            
            <Button HorizontalAlignment="left" Margin="30,0" Height="40"
                    Style="{DynamicResource Profile_btnStyle}"
                    Content="{iconPacks:PackIcon {x:Static iconPacks:PackIconBootstrapIconsKind.PersonCircle}, Height=37, Width=36}"/>

            <Grid Width="570">
                <Grid.RowDefinitions>
                    <RowDefinition Height="24*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="16*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Label Content="{Binding Name}"
                           Foreground="{StaticResource Foreground}"
                           FontFamily="{StaticResource Main.FontFamily}"
                           VerticalAlignment="Center" Grid.Column="0"
                           HorizontalAlignment="Left" FontSize="20"/>
                </Grid>

                <Rectangle Fill="{StaticResource Foreground}"
                           Grid.Row="1" Margin="0.5" Height="1"/>

                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Label Content="{Binding Attending}"
                           Foreground="{StaticResource Foreground}"
                           FontFamily="{StaticResource Main.FontFamily}"
                           Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    <Label Content="{Binding SNum}" 
                           Foreground="{StaticResource Foreground}"
                           FontFamily="{StaticResource Main.FontFamily}"
                           Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                    <Label Content="{Binding Birthday}" 
                           Foreground="{StaticResource Foreground}"
                           FontFamily="{StaticResource Main.FontFamily}"
                           Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
            </Grid>
        </StackPanel>
        
        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Button Content="{iconPacks:PackIcon {x:Static iconPacks:PackIconBootstrapIconsKind.PersonPlus }, Height=37, Width=36}" 
                    Style="{DynamicResource PersonAdd_btnStyle}"
                    Command="{Binding AddFriend_Btn, UpdateSourceTrigger=PropertyChanged}"
                    Margin="35,0"/>
            
            <Button Content="{iconPacks:PackIcon {x:Static iconPacks:PackIconBootstrapIconsKind.PersonDash }, Height=37, Width=36}"
                    Style="{DynamicResource PersonRemove_btnStyle}"
                    Command="{Binding RemoveFriend_Btn, UpdateSourceTrigger=PropertyChanged}"
                    Margin="35,0"/>
        </StackPanel>
    </Grid>
</UserControl>
