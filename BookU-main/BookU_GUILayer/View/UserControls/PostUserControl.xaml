<UserControl x:Class="BookU_GUILayer.View.UserControls.PostUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BookU_GUILayer.View.UserControls"
             xmlns:xctk1="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:vm="clr-namespace:BookU_GUILayer.ViewModels"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" d:DesignWidth="680">

    <UserControl.Resources>
        
        <!--#region Like Button Style-->
        <Style x:Key="LikebtnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{Binding LikeColor}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Expand Button Style-->
        <Style x:Key="ExpandBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource Button.Figure.Foreground}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Image Rotate Button Style-->
        <Style x:Key="ImageRotate_btnStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

    </UserControl.Resources>

    <StackPanel Margin="0,10" Background="{StaticResource Main.Content.Background}">

        <!--#region Post-->
        <Grid>
            <Button Height="40" Width="40" Margin="20"
                    HorizontalAlignment="Left"
                    Command="{Binding Profile_Btn}"
                    Content="{iconPacks:PackIcon {x:Static iconPacks:PackIconBootstrapIconsKind.PersonCircle}, Width=36, Height=37}" 
                    Style="{DynamicResource Profile_btnStyle}"/>

            <TextBlock Text="{Binding User.Name}" 
                       Margin="70,28,0,0"
                       FontFamily="{StaticResource Main.FontFamily}"
                       Foreground="{StaticResource Foreground}"
                       Height="30"
                       VerticalAlignment="Top"/>

            <Button Height="27" Width="27"
                    Padding="0" Margin="0,0,10,30"
                    HorizontalAlignment="Right"
                    Command="{Binding DeletePost_Btn}"
                    Content="{iconPacks:PackIcon {x:Static iconPacks:PackIconBootstrapIconsKind.XCircle}, Width=23, Height=23}" 
                    Style="{DynamicResource Exit_btnStyle}"/>
        </Grid>

        <TextBlock Margin="10, 0" FontSize="15"
                   TextWrapping="Wrap"
                   VerticalAlignment="Top" 
                   MaxHeight="130" MaxWidth="600"
                   x:Name="TextField" Cursor="Hand"
                   TextTrimming="WordEllipsis"
                   Text="{Binding Text}"
                   FontFamily="{StaticResource Main.FontFamily}" 
                   Foreground="{StaticResource Foreground}"
                   MouseLeftButtonDown="TextBlock_MouseLeftButtonDown"/>

        <Grid Width="500">
            <Button Command="{Binding RotatePictureCommand_Btn}" 
                    Style="{DynamicResource ImageRotate_btnStyle}">
                <Image Source="{Binding Image}" >
                    <Image.LayoutTransform>
                        <RotateTransform Angle="{Binding RotateAngle}"/>
                    </Image.LayoutTransform>
                </Image>
            </Button>
        </Grid>

        <Rectangle Fill="{StaticResource Foreground}" Height="1" Margin="20,10"/>
        <!--#endregion-->

        <!--#region Comments-->
        <StackPanel Margin="20,0,20,0" Visibility="{Binding CommentVisibility}">
            <Grid Background="Transparent">
                <ItemsControl ItemsSource="{Binding CommentsUC, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>

            <Button Margin="0,20,0,10"
                    Content="{iconPacks:PackIcon {x:Static iconPacks:PackIconBootstrapIconsKind.ThreeDots}, Width=20, Height=20}"
                    Command="{Binding ExpandComment}"
                    Style="{DynamicResource ExpandBtnStyle}"/>

        </StackPanel>
        <!--#endregion-->

        <!--#region Inputs-->
        <StackPanel Orientation="Horizontal" Margin="50,0,20,20">

            <Grid HorizontalAlignment="Left" Height="50" Width="80">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Button Command="{Binding Like_Btn}" 
                        Style="{DynamicResource LikebtnStyle}"
                        Content="{iconPacks:PackIcon {x:Static iconPacks:PackIconBoxIconsKind.SolidLike}, Width=20, Height=20}"/>

                <Label Content="{Binding Likes.Count}"
                       Grid.Column="1" FontSize="16"
                       FontFamily="{StaticResource Main.FontFamily}" 
                       Foreground="{StaticResource Foreground}"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"/>
            </Grid>

            <xctk1:WatermarkTextBox Margin="30,5,10,5"
                                    Width="350"
                                    x:Name="commentBox"
                                    Watermark="Write a comment here..."
                                    Foreground="{StaticResource Foreground}"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    TextWrapping="WrapWithOverflow"
                                    FontFamily="{StaticResource Main.FontFamily}"
                                    MaxHeight="100"
                                    BorderThickness="1"
                                    HorizontalContentAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Text="{Binding CommentText, UpdateSourceTrigger=PropertyChanged}"/>

            <Button Height="30" Width="80" Margin="10"
                    Command="{Binding AddComment_Btn}" 
                    Style="{DynamicResource Buttonstyle}">

                <StackPanel Orientation="Horizontal" Margin="-20">
                    <Label Content="{iconPacks:PackIcon {x:Static iconPacks:PackIconBootstrapIconsKind.ChatText}, Height=15, Width=15}"
                           Foreground="{StaticResource Foreground}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>

                    <Label Content="Commit"
                           Foreground="{StaticResource Foreground}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"/>
                </StackPanel>
            </Button>
        </StackPanel>
        <!--#endregion-->
        
    </StackPanel>
</UserControl>
